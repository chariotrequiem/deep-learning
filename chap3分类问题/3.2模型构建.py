# 当前版本 ： python3.7.11
# 开发时间 ： 2021/9/13 17:08
"""
回顾我们在回归问题中讨论的生物神经元结构。我们把一组长度为𝑑in的输入向量𝒙 = [𝑥1, 𝑥2, … , 𝑥𝑑in]𝑇简化为单输入标量 x，
模型可以表达成𝑦 = 𝑥𝑤 + 𝑏。如果是多输入、单输出的模型结构的话，我们需要借助于向量形式：
更一般地，通过组合多个多输入、单输出的神经元模型，可以拼成一个多输入、多输出的模型：
                       𝒚 = 𝑾𝒙 + 𝒃
其中，𝒙 ∈ 𝑅^𝑑in，𝒃 ∈ 𝑅^𝑑out，𝒚 ∈ 𝑅^𝑑out，𝑾 ∈ 𝑅^𝑑out×𝑑in。
对于多输出节点、批量训练方式，我们将模型写成批量形式：
                      𝒀 = 𝑿@𝑾 + 𝒃 (3.1)
其中𝑿 ∈ 𝑅^𝑏×𝑑in，𝒃 ∈ 𝑅^𝑑out，𝒀 ∈ 𝑅^𝑏×𝑑out，𝑾 ∈ 𝑅^𝑑in×𝑑out，𝑑in表示输入节点数，𝑑out表示输出节点数；
𝑿形状为[𝑏, 𝑑in]，表示𝑏个样本的输入数据，每个样本的特征长度为𝑑in；
𝑾的形状为[𝑑in, 𝑑out]，共包含了𝑑in ∗ 𝑑out个网络参数；偏置向量𝒃 形状为𝑑out，每个输出节点上均添加一个偏置值；
@符号表示矩阵相乘(Matrix Multiplication，简称 matmul)。由于𝑿@𝑾的运算结果是形状为[𝑏, 𝑑out]的矩阵，与向量𝒃并不能直接相加，
因此批量形式的+号需要支持自动扩展功能(Broadcasting)，将向量𝒃扩展为形状为[𝑏, 𝑑out]的矩阵后，再与𝑿@𝑾相加。
通过矩阵形式表达网络结构，更加简洁清晰，同时也可充分利用矩阵计算的并行加速能力。
那么怎么将图片识别任务的输入和输出转变为满足格式要求的张量形式呢？

考虑输入格式，一张灰度图片𝒙使用矩阵方式存储，形状为：[ℎ, 𝑤]，𝑏张图片使用形状为[𝑏, ℎ, 𝑤]的张量𝑿存储。
而我们模型只能接受向量形式的输入特征向量，因此需要将[ℎ, 𝑤]的矩阵形式图片特征打平成[ℎ ∙ 𝑤]长度的向量，如图 3.5 所示，
其中输入特征的长度𝑑in = ℎ ∙ 𝑤。

对于输出标签𝑦，前面已经介绍了数字编码，它可以用一个数字来表示标签信息，此时输出只需要一个节点即可表示网络的预测类别值，
例如数字 1 表示猫，数字 3 表示鱼等(编程实现时一般从 0 开始编号)。但是数字编码一个最大的问题是，数字之间存在天然的大小关系，
例如1 < 2 < 3，如果 1、2、3 分别对应的标签是猫、狗、鱼，他们之间并没有大小关系，所以采用数字编码的时候会迫使模型去学习这种不必要的约束

那么怎么解决这个问题呢？可以将输出设置为𝑑out个输出节点的向量，𝑑out与类别数相同，
让第𝑖 ∈ [1, 𝑑out]个输出节点的值表示当前样本属于类别𝑖的概率𝑃(𝒙属于类别𝑖|𝒙)。
我们只考虑输入图片只输入一个类别的情况，此时输入图片的真实标签已经唯一确定：如果物体属于第𝑖类的话，
那么索引为𝑖的位置上设置为 1，其他位置设置为 0，我们把这种编码方式叫作 one-hot 编码(独热编码)。
以图 3.6 中的“猫狗鱼鸟”识别系统为例，所有的样本只属于“猫狗鱼鸟”4 个类别中其一，我们将第1~4号索引位置分别表示
猫狗鱼鸟的类别，对于所有猫的图片，它的数字编码为 0，One-hot 编码为[1,0,0,0]；
对于所有狗的图片，它的数字编码为 1，One-hot 编码为[0,1,0,0]，以此类推。
One-hot 编码方式在分类问题中应用非常广泛，需要理解并掌握。

手写数字图片的总类别数有 10 种，即输出节点数𝑑out = 10，那么对于某个样本，假设它属于类别𝑖，即图片的中数字为𝑖，
只需要一个长度为 10 的向量𝒚，向量𝒚的索引号为𝑖 的元素设置为 1，其他位为 0。比如图片 0 的 One-hot 编码为[1,0,0,… ,0]，
图片 2 的 One-hot 编码为[0,0,1,… ,0]，图片 9 的 One-hot 编码为[0,0,0, … ,1]。One-hot 编码是非常稀疏(Sparse)的，
相对于数字编码来说，占用较多的存储空间，所以一般在存储时还是采用数字编码，在计算时，根据需要来把数字编码转换成 One-hot 编码，
通过 tf.one_hot 函数即可实现。
y = tf.constant([0, 1, 2, 3])  # 数字编码的4个样本标签
y = tf.one_hot(y, depth=10)  # one-hot编码，指定类别总数为10
print(y)
tf.Tensor(
[[1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]  # 数字0的one-hot编码向量
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]  # 数字1的one-hot编码向量
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]  # 数字2的one-hot编码向量
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]], shape=(4, 10), dtype=float32)
现在我们回到手写数字图片识别任务，输入是一张打平后的图片向量𝒙 ∈ 𝑅^784，输出是一个长度为 10 的向量 ∈ 𝑅^10，
图片的真实标签𝑦经过 One-hot 编码后变成长度为 10 的 非 0 即 1 的稀疏向量𝒚 ∈ {0,1}^10。
预测模型采用多输入、多输出的线性模型 = 𝑾𝐓𝒙 + 𝒃，其中模型的输出记为输入的预测值 ，我们希望 越接近真实标签𝒚越好。
一般把输入经过一次(线性)变换叫作一层网络。
"""