# 当前版本 ： python3.7.11
# 开发时间 ： 2021/9/18 16:00
"""
现在我们来推导隐藏层的梯度传播规律。简单回顾一下输出层的偏导数公式：
                        𝜕ℒ / 𝜕𝑤j𝑘 = (𝑜𝑘 − 𝑡𝑘)𝑜𝑘(1 − 𝑜𝑘)𝑥j = 𝛿𝑘𝑥j
考虑倒数第二层的偏导数𝜕ℒ / 𝜕𝑤𝑖j，如图 7.10 所示，输出层节点数为 K，输出为𝒐(𝐾) = [𝑜1(𝐾), 𝑜2(𝐾), ⋯ , 𝑜𝐾(𝐾)]；
倒数第二层节点数为 J，输出为𝒐j(J) = [𝑜1(J), 𝑜2(J), ⋯ , 𝑜j(J)]；倒数第三层的节点数为 I，输出为𝒐(𝐼) = [𝑜1(𝐼), 𝑜2(𝐼), ⋯ , 𝑜𝐼(𝐼)]。


我们来小结一下每层的偏导数的传播规律。
输出层：
                                  𝜕ℒ / ∂𝑤jk = 𝛿𝑘(𝐾)𝑜j
                            𝛿𝑘(𝐾) = 𝑜𝑘(1 − 𝑜𝑘)(𝑜𝑘 − 𝑡𝑘)
倒数第二层：
                                  𝜕ℒ / 𝜕𝑤𝑖j = 𝛿j(J)𝑜𝑖
                            𝛿j(J) = 𝑜j (1 − 𝑜j)∑𝛿𝑘(𝐾)𝑤j𝑘

倒数第三层：
                                  𝜕ℒ / ∂𝑤ni = 𝛿𝑖(𝐼)𝑜𝑛
                            𝛿𝑖(𝐼) = 𝑜𝑖(1 − 𝑜𝑖)∑𝛿j(J)𝑤𝑖j
其中𝑜𝑛为倒数第三层的输入，即倒数第四层的输出。
依照此规律，只需要循环迭代计算每一层每个节点的𝛿𝑘(𝐾)、𝛿 ( )、𝛿𝑖(𝐼)等值即可求得当前层的偏导数，从而得到每层权值矩阵𝑾的梯度，
再通过梯度下降算法迭代优化网络参数即可。
"""